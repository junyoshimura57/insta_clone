// scssにすると「*= require_self」のディレクティブの記載は不要になる？？
@import 'bootstrap-material-design/dist/css/bootstrap-material-design';
// フォントオーサムを読み込み(以下の順番が大切らしい)
@import "font-awesome-sprockets";
@import "font-awesome";
// swiperのcss読み込み
@import 'swiper/swiper-bundle';
@import 'header';

// こちらは解答よりコピー
body {
  position: relative;
  height: 100vh;
}

main {
  padding-top: 50px;
}

img {
  max-width: 100%;
}

.login-register-form {
  position: relative;
  height: 100vh;

  .login-register-form-inner {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 400px;
    @media screen and (max-width: 767px) {
      width: 100%;
    }
  }
}

.swiper-container {
  width: 100%;
}

.post {
  max-width: 400px;
  margin: 0 auto;
  .card-img-top {
    width: 400px;
    height: 400px;
    object-fit: cover;
  }
}

.image-thumbnail {
  object-fit: cover;
}

.post-detail {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;

  // cssにコンパイルすると.post-detail.cardとなる。(クラス間にスペースが開かない)
  &.card {
    flex-direction: row;
    max-width: 700px;
    margin: 0 auto;
  }
  .image-box {
    width: 400px;
    height: 400px;
    @media screen and (max-width: 767px) {
      width: 100%;
    }
    img {
      object-fit: cover;
      width: 400px;
      height: 400px;
    }
  }
  .image-info-box {
    width: 300px;
    display: flex;
    flex-direction: column;

    @media screen and (max-width: 767px) {
      width: 100%;
    }

    .post-body {
      overflow: scroll;
      max-height: 250px;
    }

    .post-comment {
      margin-top: auto;
      .input-comment-body {
        flex: 1;
      }
    }
  }
}

// ページネーションを中央寄せをする。
.pagination {
  justify-content: center;
}

// サムネイルのcssを定義する。
.thumbs {
  width: 100%;
  // 子要素でabsoluteを使用するために指定(そういうものらしい...)
  position: relative;
  // aタグをブロック要素にするために指定(width: 100%を有効にするため？)
  display: block;

  // &をつけることで親のセレクタ(thumbs)が付与される。
  // ::beforeは指定したセレクタの要素の前に内容を追加できる。
  // 空のブロック要素を前に入れることでサムネイルの上の空白を作っている？？(thumbsにマージンボトム設定だとダメ？？)
  &::before {
    content: "";
    display: block;
    padding-top: 100%;
  }
  // イメージの縦横比を揃える。
  img {
    width: 100%;
    height: 100%;
    // 親要素内で縦横100％表示の場合はposition: absoluteが必要？？
    position: absolute;
    top: 0;
    // 以下により縦横比を維持したまま中央でトリミングできる。
    object-fit: cover;
  }
}

#header-activities {
  width: 400px;
  .dropdown-item {
    max-width: initial;
    font-size: 12px;
  }
}
